/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as LayoutImport } from './routes/_layout'
import { Route as IndexImport } from './routes/index'
import { Route as LayoutHomeIndexImport } from './routes/_layout/home/index'
import { Route as LayoutHomeFamilyImport } from './routes/_layout/home/family'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LayoutHomeIndexRoute = LayoutHomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutHomeFamilyRoute = LayoutHomeFamilyImport.update({
  id: '/home/family',
  path: '/home/family',
  getParentRoute: () => LayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/home/family': {
      id: '/_layout/home/family'
      path: '/home/family'
      fullPath: '/home/family'
      preLoaderRoute: typeof LayoutHomeFamilyImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/home/': {
      id: '/_layout/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof LayoutHomeIndexImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutHomeFamilyRoute: typeof LayoutHomeFamilyRoute
  LayoutHomeIndexRoute: typeof LayoutHomeIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutHomeFamilyRoute: LayoutHomeFamilyRoute,
  LayoutHomeIndexRoute: LayoutHomeIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/about': typeof AboutRoute
  '/home/family': typeof LayoutHomeFamilyRoute
  '/home': typeof LayoutHomeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LayoutRouteWithChildren
  '/about': typeof AboutRoute
  '/home/family': typeof LayoutHomeFamilyRoute
  '/home': typeof LayoutHomeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/about': typeof AboutRoute
  '/_layout/home/family': typeof LayoutHomeFamilyRoute
  '/_layout/home/': typeof LayoutHomeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/about' | '/home/family' | '/home'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/about' | '/home/family' | '/home'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/about'
    | '/_layout/home/family'
    | '/_layout/home/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  AboutRoute: typeof AboutRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
  AboutRoute: AboutRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/home/family",
        "/_layout/home/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/_layout/home/family": {
      "filePath": "_layout/home/family.tsx",
      "parent": "/_layout"
    },
    "/_layout/home/": {
      "filePath": "_layout/home/index.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
